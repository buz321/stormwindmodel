// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calc_linear_coefs
NumericVector calc_linear_coefs(NumericVector x, NumericVector y);
RcppExport SEXP _stormwindmodel_calc_linear_coefs(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(calc_linear_coefs(x, y));
    return rcpp_result_gen;
END_RCPP
}
// find_x_section
int find_x_section(double new_x, NumericVector x);
RcppExport SEXP _stormwindmodel_find_x_section(SEXP new_xSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type new_x(new_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(find_x_section(new_x, x));
    return rcpp_result_gen;
END_RCPP
}
// interpolate_line
NumericVector interpolate_line(NumericVector x, NumericVector y, NumericVector new_x);
RcppExport SEXP _stormwindmodel_interpolate_line(SEXP xSEXP, SEXP ySEXP, SEXP new_xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type new_x(new_xSEXP);
    rcpp_result_gen = Rcpp::wrap(interpolate_line(x, y, new_x));
    return rcpp_result_gen;
END_RCPP
}
// make_interp
NumericVector make_interp(NumericVector x, NumericVector y);
RcppExport SEXP _stormwindmodel_make_interp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(make_interp(x, y));
    return rcpp_result_gen;
END_RCPP
}
// apply_interp
NumericVector apply_interp(NumericVector new_x, NumericVector x, NumericVector y, NumericVector y2d);
RcppExport SEXP _stormwindmodel_apply_interp(SEXP new_xSEXP, SEXP xSEXP, SEXP ySEXP, SEXP y2dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type new_x(new_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2d(y2dSEXP);
    rcpp_result_gen = Rcpp::wrap(apply_interp(new_x, x, y, y2d));
    return rcpp_result_gen;
END_RCPP
}
// interpolate_spline
NumericVector interpolate_spline(NumericVector x, NumericVector y, NumericVector new_x);
RcppExport SEXP _stormwindmodel_interpolate_spline(SEXP xSEXP, SEXP ySEXP, SEXP new_xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type new_x(new_xSEXP);
    rcpp_result_gen = Rcpp::wrap(interpolate_spline(x, y, new_x));
    return rcpp_result_gen;
END_RCPP
}
// radians_to_degrees
NumericVector radians_to_degrees(NumericVector radians);
RcppExport SEXP _stormwindmodel_radians_to_degrees(SEXP radiansSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type radians(radiansSEXP);
    rcpp_result_gen = Rcpp::wrap(radians_to_degrees(radians));
    return rcpp_result_gen;
END_RCPP
}
// degrees_to_radians
NumericVector degrees_to_radians(NumericVector degrees);
RcppExport SEXP _stormwindmodel_degrees_to_radians(SEXP degreesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type degrees(degreesSEXP);
    rcpp_result_gen = Rcpp::wrap(degrees_to_radians(degrees));
    return rcpp_result_gen;
END_RCPP
}
// latlon_to_km
NumericVector latlon_to_km(NumericVector tclat_1, NumericVector tclon_1, NumericVector tclat_2, NumericVector tclon_2, float Rearth);
RcppExport SEXP _stormwindmodel_latlon_to_km(SEXP tclat_1SEXP, SEXP tclon_1SEXP, SEXP tclat_2SEXP, SEXP tclon_2SEXP, SEXP RearthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tclat_1(tclat_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclon_1(tclon_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclat_2(tclat_2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclon_2(tclon_2SEXP);
    Rcpp::traits::input_parameter< float >::type Rearth(RearthSEXP);
    rcpp_result_gen = Rcpp::wrap(latlon_to_km(tclat_1, tclon_1, tclat_2, tclon_2, Rearth));
    return rcpp_result_gen;
END_RCPP
}
// calc_forward_speed
NumericVector calc_forward_speed(NumericVector tclat_1, NumericVector tclon_1, Rcpp::DatetimeVector time_1, NumericVector tclat_2, NumericVector tclon_2, Rcpp::DatetimeVector time_2);
RcppExport SEXP _stormwindmodel_calc_forward_speed(SEXP tclat_1SEXP, SEXP tclon_1SEXP, SEXP time_1SEXP, SEXP tclat_2SEXP, SEXP tclon_2SEXP, SEXP time_2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tclat_1(tclat_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclon_1(tclon_1SEXP);
    Rcpp::traits::input_parameter< Rcpp::DatetimeVector >::type time_1(time_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclat_2(tclat_2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclon_2(tclon_2SEXP);
    Rcpp::traits::input_parameter< Rcpp::DatetimeVector >::type time_2(time_2SEXP);
    rcpp_result_gen = Rcpp::wrap(calc_forward_speed(tclat_1, tclon_1, time_1, tclat_2, tclon_2, time_2));
    return rcpp_result_gen;
END_RCPP
}
// calc_bearing
NumericVector calc_bearing(NumericVector tclat_1, NumericVector tclon_1, NumericVector tclat_2, NumericVector tclon_2);
RcppExport SEXP _stormwindmodel_calc_bearing(SEXP tclat_1SEXP, SEXP tclon_1SEXP, SEXP tclat_2SEXP, SEXP tclon_2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tclat_1(tclat_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclon_1(tclon_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclat_2(tclat_2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclon_2(tclon_2SEXP);
    rcpp_result_gen = Rcpp::wrap(calc_bearing(tclat_1, tclon_1, tclat_2, tclon_2));
    return rcpp_result_gen;
END_RCPP
}
// will1a
float will1a(float vmax_gl, float r, float Rmax, float n);
RcppExport SEXP _stormwindmodel_will1a(SEXP vmax_glSEXP, SEXP rSEXP, SEXP RmaxSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type vmax_gl(vmax_glSEXP);
    Rcpp::traits::input_parameter< float >::type r(rSEXP);
    Rcpp::traits::input_parameter< float >::type Rmax(RmaxSEXP);
    Rcpp::traits::input_parameter< float >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(will1a(vmax_gl, r, Rmax, n));
    return rcpp_result_gen;
END_RCPP
}
// will4
float will4(float vmax_gl, float A, float r, float Rmax, float X1, float X2);
RcppExport SEXP _stormwindmodel_will4(SEXP vmax_glSEXP, SEXP ASEXP, SEXP rSEXP, SEXP RmaxSEXP, SEXP X1SEXP, SEXP X2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type vmax_gl(vmax_glSEXP);
    Rcpp::traits::input_parameter< float >::type A(ASEXP);
    Rcpp::traits::input_parameter< float >::type r(rSEXP);
    Rcpp::traits::input_parameter< float >::type Rmax(RmaxSEXP);
    Rcpp::traits::input_parameter< float >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< float >::type X2(X2SEXP);
    rcpp_result_gen = Rcpp::wrap(will4(vmax_gl, A, r, Rmax, X1, X2));
    return rcpp_result_gen;
END_RCPP
}
// will2
float will2(float r, float R1, float R2);
RcppExport SEXP _stormwindmodel_will2(SEXP rSEXP, SEXP R1SEXP, SEXP R2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type r(rSEXP);
    Rcpp::traits::input_parameter< float >::type R1(R1SEXP);
    Rcpp::traits::input_parameter< float >::type R2(R2SEXP);
    rcpp_result_gen = Rcpp::wrap(will2(r, R1, R2));
    return rcpp_result_gen;
END_RCPP
}
// will3_right
NumericVector will3_right(NumericVector n, NumericVector A, NumericVector X1, NumericVector Rmax);
RcppExport SEXP _stormwindmodel_will3_right(SEXP nSEXP, SEXP ASEXP, SEXP X1SEXP, SEXP RmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Rmax(RmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(will3_right(n, A, X1, Rmax));
    return rcpp_result_gen;
END_RCPP
}
// calc_R1
NumericVector calc_R1(NumericVector Rmax, NumericVector xi);
RcppExport SEXP _stormwindmodel_calc_R1(SEXP RmaxSEXP, SEXP xiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Rmax(RmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_R1(Rmax, xi));
    return rcpp_result_gen;
END_RCPP
}
// will7a
NumericVector will7a(NumericVector vmax_gl, NumericVector tclat);
RcppExport SEXP _stormwindmodel_will7a(SEXP vmax_glSEXP, SEXP tclatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vmax_gl(vmax_glSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclat(tclatSEXP);
    rcpp_result_gen = Rcpp::wrap(will7a(vmax_gl, tclat));
    return rcpp_result_gen;
END_RCPP
}
// will10a
NumericVector will10a(NumericVector vmax_gl, NumericVector tclat);
RcppExport SEXP _stormwindmodel_will10a(SEXP vmax_glSEXP, SEXP tclatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vmax_gl(vmax_glSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclat(tclatSEXP);
    rcpp_result_gen = Rcpp::wrap(will10a(vmax_gl, tclat));
    return rcpp_result_gen;
END_RCPP
}
// will10b
NumericVector will10b(NumericVector vmax_gl, NumericVector tclat);
RcppExport SEXP _stormwindmodel_will10b(SEXP vmax_glSEXP, SEXP tclatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vmax_gl(vmax_glSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclat(tclatSEXP);
    rcpp_result_gen = Rcpp::wrap(will10b(vmax_gl, tclat));
    return rcpp_result_gen;
END_RCPP
}
// will10c
NumericVector will10c(NumericVector vmax_gl, NumericVector tclat);
RcppExport SEXP _stormwindmodel_will10c(SEXP vmax_glSEXP, SEXP tclatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vmax_gl(vmax_glSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tclat(tclatSEXP);
    rcpp_result_gen = Rcpp::wrap(will10c(vmax_gl, tclat));
    return rcpp_result_gen;
END_RCPP
}
// will1
NumericVector will1(NumericVector cdist, NumericVector Rmax, NumericVector R1, NumericVector R2, NumericVector vmax_gl, NumericVector n, NumericVector A, NumericVector X1, NumericVector X2);
RcppExport SEXP _stormwindmodel_will1(SEXP cdistSEXP, SEXP RmaxSEXP, SEXP R1SEXP, SEXP R2SEXP, SEXP vmax_glSEXP, SEXP nSEXP, SEXP ASEXP, SEXP X1SEXP, SEXP X2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cdist(cdistSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Rmax(RmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type R1(R1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type R2(R2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vmax_gl(vmax_glSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X2(X2SEXP);
    rcpp_result_gen = Rcpp::wrap(will1(cdist, Rmax, R1, R2, vmax_gl, n, A, X1, X2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_stormwindmodel_calc_linear_coefs", (DL_FUNC) &_stormwindmodel_calc_linear_coefs, 2},
    {"_stormwindmodel_find_x_section", (DL_FUNC) &_stormwindmodel_find_x_section, 2},
    {"_stormwindmodel_interpolate_line", (DL_FUNC) &_stormwindmodel_interpolate_line, 3},
    {"_stormwindmodel_make_interp", (DL_FUNC) &_stormwindmodel_make_interp, 2},
    {"_stormwindmodel_apply_interp", (DL_FUNC) &_stormwindmodel_apply_interp, 4},
    {"_stormwindmodel_interpolate_spline", (DL_FUNC) &_stormwindmodel_interpolate_spline, 3},
    {"_stormwindmodel_radians_to_degrees", (DL_FUNC) &_stormwindmodel_radians_to_degrees, 1},
    {"_stormwindmodel_degrees_to_radians", (DL_FUNC) &_stormwindmodel_degrees_to_radians, 1},
    {"_stormwindmodel_latlon_to_km", (DL_FUNC) &_stormwindmodel_latlon_to_km, 5},
    {"_stormwindmodel_calc_forward_speed", (DL_FUNC) &_stormwindmodel_calc_forward_speed, 6},
    {"_stormwindmodel_calc_bearing", (DL_FUNC) &_stormwindmodel_calc_bearing, 4},
    {"_stormwindmodel_will1a", (DL_FUNC) &_stormwindmodel_will1a, 4},
    {"_stormwindmodel_will4", (DL_FUNC) &_stormwindmodel_will4, 6},
    {"_stormwindmodel_will2", (DL_FUNC) &_stormwindmodel_will2, 3},
    {"_stormwindmodel_will3_right", (DL_FUNC) &_stormwindmodel_will3_right, 4},
    {"_stormwindmodel_calc_R1", (DL_FUNC) &_stormwindmodel_calc_R1, 2},
    {"_stormwindmodel_will7a", (DL_FUNC) &_stormwindmodel_will7a, 2},
    {"_stormwindmodel_will10a", (DL_FUNC) &_stormwindmodel_will10a, 2},
    {"_stormwindmodel_will10b", (DL_FUNC) &_stormwindmodel_will10b, 2},
    {"_stormwindmodel_will10c", (DL_FUNC) &_stormwindmodel_will10c, 2},
    {"_stormwindmodel_will1", (DL_FUNC) &_stormwindmodel_will1, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_stormwindmodel(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
